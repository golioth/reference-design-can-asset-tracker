/*
 * Copyright (c) 2024 Golioth, Inc.
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/ {
	chosen {
		zephyr,canbus = &mcp2515;
	};

	aliases {
		golioth-led = &led2;
		click-uart = &arduino_serial;
		gnss7-sel = &gnss7_sel;
	};

	gpio_logic {
		compatible = "gpio-leds";
		gnss7_sel: gnss7_sel {
			gpios = <&mikrobus_header_2 0 GPIO_ACTIVE_HIGH>; /* AN */
		};
	};
};

&mikrobus_serial {
	status = "okay";
	current-speed = <38400>;
};

&mikrobus_spi {
	status = "okay";
	cs-gpios = <&mikrobus_header_1 2 GPIO_ACTIVE_LOW>; /* CS */

	mcp2515: mcp2515@0 {
		compatible = "microchip,mcp2515";
		spi-max-frequency = <1000000>;
		int-gpios = <&mikrobus_header_1 7 GPIO_ACTIVE_LOW>; /* INT */
		status = "okay";
		reg = <0x0>;
		osc-freq = <10000000>;
		bus-speed = <500000>;
		sjw = <1>;
		sample-point = <875>;

		can-transceiver {
			max-bitrate = <1000000>;
		};
	};
};

&pinctrl {
	/*
	 * Arduino Uno provides the same SCL/SDA on two sets of pins, but the
	 * nRF9160-DK maps these pins to two different pairs of GPIO. When using
	 * the Arduino Uno Click Shield board, the P0.18/P0.19 pair must be used.
	 */
	i2c2_default: i2c2_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 18)>,
				<NRF_PSEL(TWIM_SCL, 0, 19)>;
		};
	};

	i2c2_sleep: i2c2_sleep {
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 18)>,
				<NRF_PSEL(TWIM_SCL, 0, 19)>;
			low-power-enable;
		};
	};

	/*
	 * The default pin group includes RTS/CTS HW flow control, but the Arduino
	 * Uno Click Shield board does not connect these pins (only TX/RX are used).
	 * This keeps RX/TX on the same pins, but just removes RTS/CTS from the
	 * pin groups.
	 */
	uart1_default: uart1_default {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 1)>,
				<NRF_PSEL(UART_RX, 0, 0)>;
		};
	};

	uart1_sleep: uart1_sleep {
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 1)>,
				<NRF_PSEL(UART_RX, 0, 0)>;
			low-power-enable;
		};
	};
};
